name: deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: MY_AWS_REGION                                                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: cdk-hnb659fds-container-assets-567282118302-us-east-1      # set this to your Amazon ECR repository name
  ECS_SERVICE: ECSServiceStack-amazonecssampleService537E3215-pEsy1kSxZ5h4                                                   # set this to your Amazon ECS service name
  ECS_CLUSTER: service-cluster                                               # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: ./ECSServiceStackamazonecssampleTaskDef499685C5-revision5.json     # set this to the path to your Amazon ECS task definition
                                                                             # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: web                          # set this to the name of the container in the
  # containerDefinitions section of your task definitio


jobs:
  Test:
    environment: 
      name: dev
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        export REQUIRED_SETTING="Online"
        python manage.py test
 
  Build:
    needs: Test
    name: Build Image             
    uses: Chamodi1111/Test_app/.github/workflows/template/deploy/action.yml@main
    with:
      ref: ${{ github.event.workflow_run.head_branch }}
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
      IMAGE_TAG: ${{ github.sha }}
      ECR_IMAGE: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG          
      task-definition: ${{ env.ECS_TASK_DEFINITION }}
      container-name: ${{ env.CONTAINER_NAME }}
      image: ${{ steps.build-image.outputs.image }}
      service: ${{ env.ECS_SERVICE }}
      cluster: ${{ env.ECS_CLUSTER }}
